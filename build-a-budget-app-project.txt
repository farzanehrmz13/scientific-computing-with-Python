** start of main.py **

class Category:
    def __init__(self, name):
        self.name = name
        self.ledger = []

    def deposit(self, amount, description=''):
        self.ledger.append({"amount": amount, "description": description})

    def withdraw(self, amount, description=''):
        if self.check_funds(amount):
            self.ledger.append({"amount": -amount, "description": description})
            return True
        return False

    def get_balance(self):
        return sum(item["amount"] for item in self.ledger)

    def transfer(self, amount, category):
        if self.check_funds(amount):
            self.withdraw(amount, f"Transfer to {category.name}")
            category.deposit(amount, f"Transfer from {self.name}")
            return True
        return False

    def check_funds(self, amount):
        return amount <= self.get_balance()

    def __str__(self):
        title = f"{self.name:*^30}\n"
        items = ''
        for entry in self.ledger:
            desc = entry["description"][:23]
            amt = f"{entry['amount']:.2f}"[:7]
            items += f"{desc:<23}{amt:>7}\n"
        total = f"Total: {self.get_balance():.2f}"
        return title + items + total


def create_spend_chart(categories):
    withdrawals = []
    for category in categories:
        spent = sum(-item['amount'] for item in category.ledger if item['amount'] < 0)
        withdrawals.append(spent)

    total_spent = sum(withdrawals)
    percentages = [int((spent / total_spent) * 10) * 10 for spent in withdrawals]

    # Chart title and bars
    chart = "Percentage spent by category\n"
    for i in range(100, -1, -10):
        line = f"{i:>3}|"
        for pct in percentages:
            line += " o " if pct >= i else "   "
        chart += line + " \n"

    # Separator line
    chart += "    -" + "---" * len(categories) + "\n"

    # Vertical category labels
    max_length = max(len(cat.name) for cat in categories)
    names = [cat.name.ljust(max_length) for cat in categories]
    for i in range(max_length):
        line = "     "
        for name in names:
            line += name[i] + "  "
        chart += line.rstrip() + "  \n"

    return chart.rstrip("\n")


** end of main.py **

